{"ast":null,"code":"var _jsxFileName = \"/Users/jishnuk/Documents/projects/TODO/frontend/src/TodayTasks.js\";\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useContext, useEffect } from 'react';\nimport Task from './Task/Task';\nimport { MyContext } from './Context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    tasks,\n    fetchTasks\n  } = useContext(MyContext);\n  useEffect(() => {\n    fetchTasks();\n  }, []); // Fetch tasks only once on component mount\n\n  const compareTasks = (a, b) => {\n    // Convert scheduled date strings to Date objects\n    const dateA = new Date(a.scheaduleDateTime);\n    const dateB = new Date(b.scheaduleDateTime);\n\n    // Compare scheduled dates\n    if (dateA > dateB) return 1;\n    if (dateA < dateB) return -1;\n\n    // If scheduled dates are the same, compare priorities\n    return a.taskPriority - b.taskPriority;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.values(tasks).sort(compareTasks).map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      task: task\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useEffect","Task","MyContext","jsxDEV","_jsxDEV","tasks","fetchTasks","compareTasks","a","b","dateA","Date","scheaduleDateTime","dateB","taskPriority","children","Object","values","sort","map","task","index","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jishnuk/Documents/projects/TODO/frontend/src/TodayTasks.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useContext, useEffect } from 'react';\nimport Task from './Task/Task';\nimport { MyContext } from './Context/MyContext';\n\nexport default function () {\n  const { tasks, fetchTasks } = useContext(MyContext);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []); // Fetch tasks only once on component mount\n\n  const compareTasks = (a, b) => {\n    // Convert scheduled date strings to Date objects\n    const dateA = new Date(a.scheaduleDateTime);\n    const dateB = new Date(b.scheaduleDateTime);\n\n    // Compare scheduled dates\n    if (dateA > dateB) return 1;\n    if (dateA < dateB) return -1;\n\n    // If scheduled dates are the same, compare priorities\n    return a.taskPriority - b.taskPriority;\n  };\n\n  return (\n    <div>\n      {Object.values(tasks).sort(compareTasks).map((task, index) => (\n        <Task key={index} task={task} />\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,YAAY;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGP,UAAU,CAACG,SAAS,CAAC;EAEnDF,SAAS,CAAC,MAAM;IACdM,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,YAAY,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC7B;IACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,iBAAiB,CAAC;IAC3C,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,iBAAiB,CAAC;;IAE3C;IACA,IAAIF,KAAK,GAAGG,KAAK,EAAE,OAAO,CAAC;IAC3B,IAAIH,KAAK,GAAGG,KAAK,EAAE,OAAO,CAAC,CAAC;;IAE5B;IACA,OAAOL,CAAC,CAACM,YAAY,GAAGL,CAAC,CAACK,YAAY;EACxC,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,EACGC,MAAM,CAACC,MAAM,CAACZ,KAAK,CAAC,CAACa,IAAI,CAACX,YAAY,CAAC,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvDjB,OAAA,CAACH,IAAI;MAAamB,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}