{"ast":null,"code":"var _jsxFileName = \"/Users/jishnuk/Documents/projects/TODO/frontend/src/TodayTasks.js\";\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useContext, useEffect } from 'react';\nimport Task from './Task/Task';\nimport { MyContext } from './Context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    tasks,\n    fetchTasks\n  } = useContext(MyContext);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchTasks(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(tasks).sort((a, b) => {\n      const dateComparison = new Date(b.scheaduleDateTime) - new Date(a.scheaduleDateTime);\n      if (dateComparison !== 0) {\n        // If dates are different, sort by date\n        return dateComparison;\n      } else {\n        // If dates are same, sort by priority\n        return b.taskPriority - a.taskPriority;\n      }\n    }).map(key => /*#__PURE__*/_jsxDEV(Task, {\n      task: tasks[key]\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useEffect","Task","MyContext","jsxDEV","_jsxDEV","tasks","fetchTasks","children","Object","keys","sort","a","b","dateComparison","Date","scheaduleDateTime","taskPriority","map","key","task","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jishnuk/Documents/projects/TODO/frontend/src/TodayTasks.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport React, { useContext, useEffect } from 'react'\nimport Task from './Task/Task'\nimport { MyContext } from './Context/MyContext'\n\n\nexport default function () {\n  const {tasks,fetchTasks} = useContext(MyContext)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchTasks(),[])\n  return (\n    <div>\n        {Object.keys(tasks).sort((a,b) => {\n    const dateComparison = new Date(b.scheaduleDateTime) - new Date(a.scheaduleDateTime);\n    if (dateComparison !== 0) {\n      // If dates are different, sort by date\n      return dateComparison;\n    } else {\n      // If dates are same, sort by priority\n      return b.taskPriority - a.taskPriority;\n    }\n  }).map(\n            key => <Task key ={key} task = {tasks[key]} />\n        )}\n    </div>\n  )\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,SAAS,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/C,eAAe,YAAY;EACzB,MAAM;IAACC,KAAK;IAACC;EAAU,CAAC,GAAGP,UAAU,CAACG,SAAS,CAAC;EAChD;EACAF,SAAS,CAAC,MAAMM,UAAU,CAAC,CAAC,EAAC,EAAE,CAAC;EAChC,oBACEF,OAAA;IAAAG,QAAA,EACKC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;MACtC,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,iBAAiB,CAAC,GAAG,IAAID,IAAI,CAACH,CAAC,CAACI,iBAAiB,CAAC;MACpF,IAAIF,cAAc,KAAK,CAAC,EAAE;QACxB;QACA,OAAOA,cAAc;MACvB,CAAC,MAAM;QACL;QACA,OAAOD,CAAC,CAACI,YAAY,GAAGL,CAAC,CAACK,YAAY;MACxC;IACF,CAAC,CAAC,CAACC,GAAG,CACIC,GAAG,iBAAId,OAAA,CAACH,IAAI;MAAYkB,IAAI,EAAId,KAAK,CAACa,GAAG;IAAE,GAAxBA,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}