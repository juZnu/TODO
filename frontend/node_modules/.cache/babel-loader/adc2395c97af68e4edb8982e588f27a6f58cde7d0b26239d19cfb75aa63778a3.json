{"ast":null,"code":"var _jsxFileName = \"/Users/jishnuk/Documents/projects/TODO/frontend/src/TodayTasks.js\";\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useContext, useEffect } from 'react';\nimport Task from './Task/Task';\nimport { MyContext } from './Context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    tasks,\n    fetchTasks\n  } = useContext(MyContext);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchTasks(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(tasks).sort((a, b) => {\n      // Convert scheduled date strings to Date objects\n      const dateA = new Date(a.scheaduleDateTime);\n      const dateB = new Date(b.scheaduleDateTime);\n\n      // Compare scheduled dates\n      if (dateA < dateB) return -1;\n      if (dateA > dateB) return 1;\n\n      // If scheduled dates are the same, compare priorities\n      return b.taskPriority - a.taskPriority;\n    }).map(key => /*#__PURE__*/_jsxDEV(Task, {\n      task: tasks[key]\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useEffect","Task","MyContext","jsxDEV","_jsxDEV","tasks","fetchTasks","children","Object","keys","sort","a","b","dateA","Date","scheaduleDateTime","dateB","taskPriority","map","key","task","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jishnuk/Documents/projects/TODO/frontend/src/TodayTasks.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport React, { useContext, useEffect } from 'react'\nimport Task from './Task/Task'\nimport { MyContext } from './Context/MyContext'\n\n\nexport default function () {\n  const {tasks,fetchTasks} = useContext(MyContext)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => fetchTasks(),[])\n  return (\n    <div>\n        {Object.keys(tasks).sort((a,b) => {\n    // Convert scheduled date strings to Date objects\n    const dateA = new Date(a.scheaduleDateTime);\n    const dateB = new Date(b.scheaduleDateTime);\n\n    // Compare scheduled dates\n    if (dateA < dateB) return -1;\n    if (dateA > dateB) return 1;\n\n    // If scheduled dates are the same, compare priorities\n    return b.taskPriority - a.taskPriority;\n  }).map(\n            key => <Task key ={key} task = {tasks[key]} />\n        )}\n    </div>\n  )\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,SAAS,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/C,eAAe,YAAY;EACzB,MAAM;IAACC,KAAK;IAACC;EAAU,CAAC,GAAGP,UAAU,CAACG,SAAS,CAAC;EAChD;EACAF,SAAS,CAAC,MAAMM,UAAU,CAAC,CAAC,EAAC,EAAE,CAAC;EAChC,oBACEF,OAAA;IAAAG,QAAA,EACKC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;MACtC;MACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,iBAAiB,CAAC;MAC3C,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,iBAAiB,CAAC;;MAE3C;MACA,IAAIF,KAAK,GAAGG,KAAK,EAAE,OAAO,CAAC,CAAC;MAC5B,IAAIH,KAAK,GAAGG,KAAK,EAAE,OAAO,CAAC;;MAE3B;MACA,OAAOJ,CAAC,CAACK,YAAY,GAAGN,CAAC,CAACM,YAAY;IACxC,CAAC,CAAC,CAACC,GAAG,CACIC,GAAG,iBAAIf,OAAA,CAACH,IAAI;MAAYmB,IAAI,EAAIf,KAAK,CAACc,GAAG;IAAE,GAAxBA,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}